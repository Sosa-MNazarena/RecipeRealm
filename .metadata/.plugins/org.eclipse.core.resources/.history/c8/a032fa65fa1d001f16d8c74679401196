package Vistas;

import javax.swing.JOptionPane;
import Modelos.Aficionado;
import Modelos.Chef;
import Modelos.Perfil;
import Controladores.PerfilControlador;
import Controladores.DatabaseConnection;
import java.sql.Connection;
import javax.swing.ImageIcon;

public class Main {

    public static void main(String[] args) {
        // Conexión a la base de datos
        DatabaseConnection databaseConnection = DatabaseConnection.getInstance();
        Connection connection = databaseConnection.getConnection();

        // Verificar si la conexión fue exitosa
        if (connection == null) {
            JOptionPane.showMessageDialog(null, "No se pudo establecer la conexión a la base de datos.");
            System.exit(0);
        }

        // Selección de rol
        String[] opcionesInicioSesion = { "Iniciar sesión", "Registrar", "Salir" };
        int opcion;
        PerfilControlador perfilControlador = new PerfilControlador();

        do {
            ImageIcon iconBienvenida = new ImageIcon(Main.class.getResource("/imagenes/Bienvenida.png"));
            JOptionPane.showMessageDialog(null, "", "Bienvenid@", 0, iconBienvenida);

            opcion = JOptionPane.showOptionDialog(null, "Seleccione una opción", "Inicio de sesión", 0, 0, null,
                    opcionesInicioSesion, opcionesInicioSesion[0]);

            switch (opcion) {
                case 0: // Iniciar sesión
                    String correo = JOptionPane.showInputDialog("Ingrese su correo:");
                    String contrasena = JOptionPane.showInputDialog("Ingrese su contraseña:");
                    Perfil perfil = perfilControlador.iniciarSesion(correo, contrasena);
                    if (perfil != null) {
                        if (perfil.isVerificado()) {
                            Chef chef = new Chef(perfil.getId(), perfil.getNombre(), perfil.getPseudonimo(), perfil.getCorreo(), perfil.getContrasena(), perfil.getDescripcion(), perfil.isVerificado());
                            chef.mostrarMenu();
                        } else {
                            Aficionado aficionado = new Aficionado(perfil.getId(), perfil.getNombre(), perfil.getPseudonimo(), perfil.getCorreo(), perfil.getContrasena(), perfil.getDescripcion(), perfil.isVerificado());
                            aficionado.mostrarMenu();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Correo o contraseña incorrectos.");
                    }
                    break;

                case 1: // Registrar
                    String nombre = JOptionPane.showInputDialog("Ingrese su nombre:");
                    String pseudonimo = JOptionPane.showInputDialog("Ingrese su pseudónimo:");
                    correo = JOptionPane.showInputDialog("Ingrese su correo:");
                    contrasena = JOptionPane.showInputDialog("Ingrese su contraseña:");
                    String descripcion = JOptionPane.showInputDialog("Ingrese una descripción:");
                    boolean verificado = false; // Por defecto, los nuevos usuarios no están verificados
                    Perfil nuevoPerfil = new Perfil(0, nombre, pseudonimo, correo, contrasena, descripcion, verificado);
                    perfilControlador.registrarPerfil(nuevoPerfil);
                    break;

                case 2: // Salir
                    ImageIcon iconSalir = new ImageIcon(Main.class.getResource("/imagenes/Salir.png"));
                    JOptionPane.showMessageDialog(null, "Gracias por usar el sistema", "Salir", 0, iconSalir);
                    break;
            }
        } while (opcion != 2);
    }
}
			/*
			 * case 1: // Chef ImageIcon iconChef = new
			 * ImageIcon(Main.class.getResource("/imagenes/chef.png")); Chef chef = new
			 * Chef("Maria", "maria@chef.com", "contrasena", true);
			 * JOptionPane.showMessageDialog(null, "Bienvenido " + chef.getNombre(), "Chef",
			 * 0, iconChef); String[] opcionesChef = {"Recetas", "Favoritos", "Busqueda",
			 * "Salir"}; int opcionElegidaChef = 0; do { opcionElegidaChef =
			 * JOptionPane.showOptionDialog(null, "Elija que desea hacer",
			 * "Acciones de Chef", opcion, opcion, null, opcionesChef, opcionesChef[0]);
			 * switch (opcionElegidaChef) { case 0: ImageIcon iconRecetas = new
			 * ImageIcon(Main.class.getResource("/imagenes/Recetas.png"));
			 * JOptionPane.showMessageDialog(null, "", "Bienvenid@", 0, iconRecetas);
			 * chef.menuRecetas(); break; case 1: ImageIcon iconFavoritos = new
			 * ImageIcon(Main.class.getResource("/imagenes/Favoritos.png"));
			 * JOptionPane.showMessageDialog(null, "", "Bienvenid@", 0, iconFavoritos);
			 * chef.menuFavoritos(); break; case 2: ImageIcon iconBusqueda = new
			 * ImageIcon(Main.class.getResource("/imagenes/Busqueda.png"));
			 * JOptionPane.showMessageDialog(null, "", "Bienvenid@", 0, iconBusqueda);
			 * chef.menuBusqueda(); break; case 3: JOptionPane.showMessageDialog(null,
			 * "Salir del perfil"); break; } } while (opcionElegidaChef != 3); break;
			
			case 2: // Salir
				ImageIcon iconSalir = new ImageIcon(Main.class.getResource("/imagenes/Salir.png"));
				JOptionPane.showMessageDialog(null, "Gracias por usar el sistema", "Chef", 0, iconSalir);
				break;
			}
	
		} while (opcion != 2); 
	} */
